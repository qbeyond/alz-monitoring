let VMs = MonitoringResources_CL 
| where TimeGenerated > ago(13h)
| where type_s == "microsoft.compute/virtualmachines"
| summarize arg_max(TimeGenerated, *) by name_s
| project vmResourceID = ResourceId, name = tolower(name_s), managedby = tags_managedby_s, osType = properties_storageProfile_osDisk_osType_s;
AddonAzureBackupJobs
| where JobStatus == "Failed"
| where JobOperation =="Backup"
| extend vm = extract("(iaasvmcontainerv2;.+?;)(.+)", 2, BackupItemUniqueId)
| extend vault = extract("(microsoft.recoveryservices/vaults/)(.+)$", 2, tostring(_ResourceId))
| project TimeGenerated, JobFailureCode, vm, vault, _ResourceId, JobOperationSubType, JobStartDateTime, BackupItemUniqueId, AdHocOrScheduledJob
| join kind = leftouter(VMs) on $left.vm == $right.name
| where managedby =~ "q.beyond"
| extend state = "Warning"
| extend monitor_package = iff(osType == "Windows","AZ_SC_ManagedOSWindows","AZ_SC_ManagedOSUnix")
| extend monitor_name = "AZ_BACKUP_FAILED"
| extend monitor_description = "Monitors data backup onAzure"
| extend script_name = "n/a"
| extend script_version = "n/a"
| extend threshold = "n/a"
| extend affected_entity = iff(isempty(JobOperationSubType), "Backup failed on JobOperationSubtype: not given", strcat("Backup failed on JobOperationSubtype: ", JobOperationSubType))
| extend additional_information = strcat("Backup failed on ",vm,". AdHoc or Scheduled job: " , AdHocOrScheduledJob, ". JobStartDateTime[UTC]: ",JobStartDateTime, ". BackupItemUniqueId: ", BackupItemUniqueId, ". ManagedBy: ",managedby)
| extend Timestamp = now()
| project Timestamp, _ResourceId = vmResourceID,state, affected_object = vm, monitor_package, monitor_name, monitor_description, script_name, script_version, threshold, value = JobFailureCode, affected_entity, additional_information
